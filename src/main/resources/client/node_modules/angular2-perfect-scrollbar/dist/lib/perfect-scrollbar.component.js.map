{"version":3,"file":"perfect-scrollbar.component.js","sourceRoot":"","sources":["../../src/lib/perfect-scrollbar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Ps from 'perfect-scrollbar';\n\nimport { Component, DoCheck, OnDestroy, Input, Optional, ElementRef, AfterViewInit, ViewEncapsulation, NgZone } from '@angular/core';\n\nimport { PerfectScrollbarConfig, PerfectScrollbarConfigInterface } from './perfect-scrollbar.interfaces';\n\n\nexport class PerfectScrollbarComponent implements DoCheck, OnDestroy, AfterViewInit {\n  private width: number;\n  private height: number;\n\n  private contentWidth: number;\n  private contentHeight: number;\n\n   runInsideAngular: boolean = false;\n\n   config: PerfectScrollbarConfigInterface;\n\n  constructor( public elementRef: ElementRef,  private defaults: PerfectScrollbarConfig, private zone: NgZone ) {}\n\n  ngDoCheck() {\n    if (this.elementRef.nativeElement.children && this.elementRef.nativeElement.children.length) {\n      let width = this.elementRef.nativeElement.offsetWidth;\n      let height = this.elementRef.nativeElement.offsetHeight;\n\n      let contentWidth = this.elementRef.nativeElement.children[0].offsetWidth;\n      let contentHeight = this.elementRef.nativeElement.children[0].offsetHeight;\n\n      if (width !== this.width || height !== this.height || contentWidth !== this.contentWidth || contentHeight !== this.contentHeight) {\n        this.width = width;\n        this.height = height;\n\n        this.contentWidth = contentWidth;\n        this.contentHeight = contentHeight;\n\n        this.update();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.runInsideAngular) {\n      Ps.destroy(this.elementRef.nativeElement);\n    } else {\n      this.zone.runOutsideAngular(() => {\n        Ps.destroy(this.elementRef.nativeElement);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    let config = new PerfectScrollbarConfig(this.defaults);\n\n    config.assign(this.config);\n\n    if (this.runInsideAngular) {\n      Ps.initialize(this.elementRef.nativeElement, config);\n    } else {\n      this.zone.runOutsideAngular(() => {\n        Ps.initialize(this.elementRef.nativeElement, config);\n      });\n    }\n  }\n\n  update() {\n    if (this.runInsideAngular) {\n      Ps.update(this.elementRef.nativeElement);\n    } else {\n      this.zone.runOutsideAngular(() => {\n        Ps.update(this.elementRef.nativeElement);\n      });\n    }\n  }\n\n  scrollTo(x: number, y?: number) {\n    if (y == null) {\n      this.elementRef.nativeElement.scrollTop = x;\n    } else {\n      this.elementRef.nativeElement.scrollTop = y;\n\n      this.elementRef.nativeElement.scrollLeft = x;\n    }\n\n    this.update();\n  }\n\n  scrollToTop(offset: number = 0) {\n    this.elementRef.nativeElement.scrollTop = 0 + offset;\n\n    this.update();\n  }\n\n  scrollToLeft(offset: number = 0) {\n    this.elementRef.nativeElement.scrollLeft = 0 + offset;\n\n    this.update();\n  }\n\n  scrollToRight(offset: number = 0) {\n    let width = this.elementRef.nativeElement.scrollWidth;\n\n    this.elementRef.nativeElement.scrollLeft = width - offset;\n\n    this.update();\n  }\n\n  scrollToBottom(offset: number = 0) {\n    let height = this.elementRef.nativeElement.scrollHeight;\n\n    this.elementRef.nativeElement.scrollTop = height - offset;\n\n    this.update();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'perfect-scrollbar',\n  templateUrl: './perfect-scrollbar.component.html',\n  styleUrls: ['./perfect-scrollbar.component.css'],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: PerfectScrollbarConfig, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'runInsideAngular': [{ type: Input },],\n'config': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}