"use strict";
var Ps = require('perfect-scrollbar');
var core_1 = require('@angular/core');
var perfect_scrollbar_interfaces_1 = require('./perfect-scrollbar.interfaces');
var PerfectScrollbarDirective = (function () {
    function PerfectScrollbarDirective(elementRef, defaults, zone) {
        this.elementRef = elementRef;
        this.defaults = defaults;
        this.zone = zone;
        this.runInsideAngular = false;
    }
    PerfectScrollbarDirective.prototype.ngDoCheck = function () {
        if (this.elementRef.nativeElement) {
            var contentWidth = this.contentWidth;
            var contentHeight = this.contentHeight;
            var width = this.elementRef.nativeElement.offsetWidth;
            var height = this.elementRef.nativeElement.offsetHeight;
            if (this.elementRef.nativeElement.children && this.elementRef.nativeElement.children.length) {
                contentWidth = this.elementRef.nativeElement.children[0].offsetWidth;
                contentHeight = this.elementRef.nativeElement.children[0].offsetHeight;
            }
            if (width !== this.width || height !== this.height || contentWidth !== this.contentWidth || contentHeight !== this.contentHeight) {
                this.width = width;
                this.height = height;
                this.contentWidth = contentWidth;
                this.contentHeight = contentHeight;
                this.update();
            }
        }
    };
    PerfectScrollbarDirective.prototype.ngOnDestroy = function () {
        var _this = this;
        if (this.runInsideAngular) {
            Ps.destroy(this.elementRef.nativeElement);
        }
        else {
            this.zone.runOutsideAngular(function () {
                Ps.destroy(_this.elementRef.nativeElement);
            });
        }
    };
    PerfectScrollbarDirective.prototype.ngAfterViewInit = function () {
        var _this = this;
        var config = new perfect_scrollbar_interfaces_1.PerfectScrollbarConfig(this.defaults);
        config.assign(this.config);
        if (this.runInsideAngular) {
            Ps.initialize(this.elementRef.nativeElement, config);
        }
        else {
            this.zone.runOutsideAngular(function () {
                Ps.initialize(_this.elementRef.nativeElement, config);
            });
        }
    };
    PerfectScrollbarDirective.prototype.update = function () {
        var _this = this;
        if (this.runInsideAngular) {
            Ps.update(this.elementRef.nativeElement);
        }
        else {
            this.zone.runOutsideAngular(function () {
                Ps.update(_this.elementRef.nativeElement);
            });
        }
    };
    PerfectScrollbarDirective.prototype.scrollTo = function (x, y) {
        if (y == null) {
            this.elementRef.nativeElement.scrollTop = x;
        }
        else {
            this.elementRef.nativeElement.scrollTop = y;
            this.elementRef.nativeElement.scrollLeft = x;
        }
        this.update();
    };
    PerfectScrollbarDirective.prototype.scrollToTop = function (offset) {
        if (offset === void 0) { offset = 0; }
        this.elementRef.nativeElement.scrollTop = 0 + offset;
        this.update();
    };
    PerfectScrollbarDirective.prototype.scrollToLeft = function (offset) {
        if (offset === void 0) { offset = 0; }
        this.elementRef.nativeElement.scrollLeft = 0 + offset;
        this.update();
    };
    PerfectScrollbarDirective.prototype.scrollToRight = function (offset) {
        if (offset === void 0) { offset = 0; }
        var width = this.elementRef.nativeElement.scrollWidth;
        this.elementRef.nativeElement.scrollLeft = width - offset;
        this.update();
    };
    PerfectScrollbarDirective.prototype.scrollToBottom = function (offset) {
        if (offset === void 0) { offset = 0; }
        var height = this.elementRef.nativeElement.scrollHeight;
        this.elementRef.nativeElement.scrollTop = height - offset;
        this.update();
    };
    PerfectScrollbarDirective.decorators = [
        { type: core_1.Directive, args: [{
                    selector: '[perfect-scrollbar]',
                    host: {
                        style: 'position: relative;'
                    }
                },] },
    ];
    /** @nocollapse */
    PerfectScrollbarDirective.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
        { type: perfect_scrollbar_interfaces_1.PerfectScrollbarConfig, decorators: [{ type: core_1.Optional },] },
        { type: core_1.NgZone, },
    ]; };
    PerfectScrollbarDirective.propDecorators = {
        'runInsideAngular': [{ type: core_1.Input },],
        'config': [{ type: core_1.Input, args: ['perfect-scrollbar',] },],
    };
    return PerfectScrollbarDirective;
}());
exports.PerfectScrollbarDirective = PerfectScrollbarDirective;
//# sourceMappingURL=perfect-scrollbar.directive.js.map